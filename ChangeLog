2008-01-16  Bruno Mahé <paf@tuxfamily.org>
	* config: Initial release
	* config/ogre_resources.template: Initial release
	* src/main.cpp: Comment unused code
	* src/core/include/camerafreefly.h: Remove unused ';'
	* src/core/include/camerafreeflylistener.h: Remove unused ';'
	* src/core/include/camera.h: Remove unused ';'
	* src/sound/include/audiocodechandler.h: getFileType() should be virtual
pure
	* src/sound/src/csoundmodule.cpp: Fix comparison between two unsigned
	integers
	* src/sound/src/soundmanager.cpp: saveImpl() should return something
	* src/sound/src/oggcodechandler.cpp: buffer shoudl be dynamically
	allocated
	* src/sound/src/sound.cpp: Fix comparison between two unsigned integers
	* src/graphic/src/cgraphicmodule.cpp: Fix config path
	* src/graphic/src/csceneparser.cpp: Fix unitialized variables
	* Makefile.am: Add installation and uninstall hooks

2008-01-13  Bruno Mahé <paf@tuxfamily.org>
	* src/input/include/cinputeventstranslator.h: Add
	CMouseButtonEventsTranslator listener for translating mouse button events
	* src/input/include/cmousebuttoneventstranslator.h: Initial release
	* src/input/src/cinputeventstranslator.cpp: Add
	CMouseButtonEventsTranslator listener for translating mouse button events
	* src/input/src/cmousebuttoneventstranslator.cpp: Initial release
	* Makefile.am: Update list of source files
	* data/keyboardEventTranslationMap: Initial release
	* data/mouseButtonEventTranslationMap: Initial release
	* data/mouseMotionEventTranslationMap: Initial release

2008-01-13  Bruno Mahé <paf@tuxfamily.org>
	* src/input/include/cmousemotioneventstranslator.h: Add sendZMotionEvents()
	to take Z axis in account
	* src/input/src/cmousemotioneventstranslator.cpp: Add sendZMotionEvents()
	to take Z axis in account

2008-01-12  Bruno Mahé <paf@tuxfamily.org>
	* src/main.cpp: SoundManager paths can also be initialized through command
	line parameters
	* src/sound/src/csoundmodule.cpp: Delete default repositories
	initialization

2008-01-12  Bruno Mahé <paf@tuxfamily.org>
	* src/core/src/camerathirdpersonlistene.cpp: Remove this file. It's a typo
	from src/core/src/camerathirdpersonlistener.cpp

2008-01-12  Bruno Mahé <paf@tuxfamily.org>
	* src/input/include/cmousemotioneventstranslator.h: Initial release
	* src/input/include/cinputeventstranslator.h: Add code for using
	CMouseMotionEventsTranslator
	* src/input/include/ckeyboardtranslationevents.h : Renamed to
	src/input/include/ctranslationevents.h; Add some comments
	* src/input/include/coisinputmanager.h: Remove \r
	* src/input/src/cmousemotioneventstranslator.cpp: Initial release
	* src/input/src/cinputeventstranslator.cpp: Add code for using
	CMouseMotionEventsTranslator
	* src/input/src/ckeyboardeventstranslator.cpp:­Rename
	ckeyboardtranslationevents.h to ctranslationevents.h
	* src/main.cpp: Use boost::program_option to parse parameters. Option
	currently implemented provide a way to add new loading/saving path for
	PersistentObject objects
	* src/core/include/camerafirstpersonlistener.h: Remove \r
	* src/core/include/camerafirstperson.h: Remove \r
	* src/core/src/camerathirdpersonlistene.cpp: Remove \r and add some empty
	lines at the end of the file
	* Makefile.am: Create a launch script at installation time. So the data
	path can be passed as an argument to gnoll at launch time

2008-01-10 Bruno Mahé <paf@tuxfamily.org>
	* src/input/include/cinputmouseevents.h: Remove \r
	* src/input/include/cinputeventstranslator.h: Initial release
	* src/input/include/ckeyboardeventstranslator.h: Initial release
	* src/input/include/ckeyboardtranslationevents.h: Initial release
	* src/input/src/cinputeventstranslator.cpp: Initial release
	* src/input/src/ckeyboardeventstranslator.cpp: Initial release
	* src/input/src/coisinputmodule.cpp: Remove \r
	* src/main.cpp: Add new module CInputEventsTranslator
	* src/core/include/cmessagetype.h: Remove \r
	* src/core/include/cgenericmessagemanager.h: Replace boost::mutex by
	boost::recursive_mutex. The program would get stuck if a CMessageListener
	would try to send a new message since CGenericMessageManager's mutexes
	would already be locked
	* src/core/src/cameraspline.cpp: Add empty lines at the end of this file
	* src/core/src/camerasplinelistener.cpp: Add empty lines at the end of this
	file
	* src/core/src/camerafreeflylistener.cpp: Add empty lines at the end of
	this file
	* src/core/src/cgenericmessagemanager.cpp: Replace boost::mutex by
	boost::recursive_mutex. The program would get stuck if a CMessageListener
	would try to send a new message since CGenericMessageManager's mutexes
	would already be locked
	* src/core/src/camerathirdpersonlistener.cpp: Add empty lines at the end of
	this file
	* src/core/src/camerafirstperson.cpp: Add empty lines at the end of this
	file
	* src/core/src/camera.cpp: Add empty lines at the end of this file
	* src/core/src/camerafirstpersonlistener.cpp: Add empty lines at the end of
	this file
	* src/graphic/src/cgraphicmodule.cpp: Destroy a RayQuery after being used;
	Use a shared_ptr<ISceneFactory instead of a ISceneFactory*. There was bug,
	there was no delete
	* Makefile.am: Update source files list

2007-12-24  Gabriel <contact@huau-gabriel.fr>
	* src/core/include/camera.h: delete scenemanager from Ctor 
	* src/core/include/camera.cpp: pass by GraphicModule to get the scenemanager and delete scenemanager from constructor 
	* src/core/include/camerafirstperson.h: delete scenemanager from Ctor 
	* src/core/include/camerafirstperson.cpp: delete scenemanager from Ctor
	* src/core/include/camerafreefly.h: delete scenemanager from Ctor 
	* src/core/include/camerafreefly.cpp: delete scenemanager from Ctor
	* src/core/include/cameraspline.h: delete scenemanager from Ctor 
	* src/core/include/cameraspline.cpp: delete scenemanager from Ctor
	* src/core/include/camerathirdperson.h: delete scenemanager from Ctor 
	* src/core/include/camerathirdperson.cpp: delete scenemanager from Ctor

2007-12-24  Gabriel <contact@huau-gabriel.fr>
	* src/core/include/camerafirstpersonlistener.h: Initial release
	* src/core/include/camerafirstpersonlistener.cpp: Initial release 
	* src/core/include/camerafreeflylistener.h: Initial release
	* src/core/include/camerafreeflylistener.cpp: Initial release
	* src/core/include/camerathirdpersonlistener.h: Initial release
	* src/core/include/camerathirdpersonlistener.cpp: Initial release
	* src/core/include/camerasplinelistener.h: Initial release
	* src/core/include/camerasplinelistener.cpp: Initial release
	* src/core/include/cgraphicmodule.cpp: Change spline camera to third person camera

2007-12-21  Bruno Mahé <paf@tuxfamily.org>
	* src/graphic/include/csceneparser.h: Revert the replacement of
	Glib::ustring by std::string. It was breaking inheritance.
	* src/graphic/src/cgraphicmodule.cpp: Moved SkyDome and Terrain loading to
	scene parser
	* src/graphic/src/csceneparser.cpp: Add Terrain and SkyDome nodes parsing;
	Revert the replacement of Glib::ustring by std::string

2007-12-17  Bruno Mahé <paf@tuxfamily.org>
	* src/core/include/attributehandlerregistry.h: Remove \r
	* src/core/include/cpersistentobjectproxy.h: Remove \r
	* src/core/include/string.h: Remove \r
	* src/core/include/scalar.h: Add default values to constructor
	* src/core/include/persistentobjectmanager.h: Fix comments
	* src/core/include/camera.h: Camera inherits of CPersistentObjectProxy
	instead of PersistentObject
	* src/core/src/persistentobject.cpp: Remove \r
	* src/core/src/camerafirstperson.cpp: Replace CGenericMessageManager by
	CMessageModule
	* src/core/src/attributehandlerregistry.cpp: Add an attribute handler for
	CMeshPageRenderer
	* src/core/Makefile: Update targets
	* src/graphic/include/cgraphicmodule.h: Put resource path loading in a private method
	* src/graphic/src/cgraphicmodule.cpp: Put resource path loading in a
	private method and use PersistentObject instead of Ogre resource.cfg to
	load these resources paths              
	* src/scene: Initial release
	* src/scene/include : Initial release
	* src/scene/include/cscenemanager.h: Initial release
	* src/scene/include/ipagerenderer.h: Initial release
	* src/scene/include/cpage.h: Initial release
	* src/scene/include/cmeshpagerenderer.h: Initial release
	* src/scene/src/cpage.cpp: Initial release
	* src/scene/src/cmeshpagerenderer.cpp: Initial release
	* src/scene/src/cscenemanager.cpp: Initial release
	* Makefile.am: Update source files

2007-12-15  Bruno Mahé <paf@tuxfamily.org>
	* Doxyfile: Replace 'Viracocha' by 'Gnoll'
	* configure.ac: Add more tests
	* src/core/tests/testcpo.cpp: Initial release of a test program using
	CPersistentObectProxy
	* src/core/include/cpersistentobjectproxy.h: Initial release
	* src/core/include/basemanager.h: replace boost::mutex by
	boost::recursive_mutex; add method saveObj(string _instanceName, T _obj);
	Add a policy for objects not found when saving
	* src/core/include/persistentobjectmanager.h: Add BaseManager policy 
	* src/core/include/persistentobject.h: Add policies when an attribute is
	not found
	* src/core/src/cpersistentobjectproxy.cpp: Initial release
	* src/core/Makefile: Add a new target testcpo to compile src/core/tests/testcpo.cpp 

2007-11-30  Bruno Mahé <paf@tuxfamily.org>
	* src/core/include/singleton.h: Singleton is now part of the namespace
	Gnoll::Core. Add also a mutex to make it thread friendly
	* src/core/include/cgenericmessagemanager.h: Make NUMQUEUE a static const,
	CGenericMessageManager has now several mutexes
	* src/core/src/cgenericmessagemanager.cpp: CGenericMessageManager has now several mutexes
	* src/time/include/ctimemodule.h: Add some mutexes to make it thread friendly
	* src/time/src/ctimemodule.cpp: Add some mutexes to make it thread friendly
	* Makefile.am: Add boost::Thread library

2007-11-19  Bruno Mahé <paf@tuxfamily.org>
	* trunk/src/core/include/basemanager.h: Add mutexes
	* trunk/src/core/include/cgenericmessagemanager.h: Add mutexes
	* trunk/src/core/src/cgenericmessagemanager.cpp: Add mutexes
	* trunk/src/core/Makefile: Update Makefile (add -lboost_thread)

2007-11-16  Bruno Mahé <paf@tuxfamily.org>
	* src/input/include/csdlinputmodule.h: Remove all \r
	* src/input/include/coisinputmodule.h: Remove all \r
	* src/input/src/coisinputmanager.cpp: Remove all references to CGenericMessageManager
	* src/input/src/csdlinputmodule.cpp: Remove all references to CGenericMessageManager
	* src/main.cpp: Remove all references to CGenericMessageManager 
	* src/core/tests/testmsg.cpp: Remove all references to CGenericMessageManager
	* src/core/include/cmessagemodule.h: Initial release
	* src/core/include/cmessagemanager.h: Remove all \r
	* src/core/include/cmodule.h: Remove all \r
	* src/core/include/singleton.h: Remove all \r
	* src/core/include/camerafixe.h: Remove all \r
	* src/core/include/camerafreefly.h: Remove all references to CGenericMessageManager 
	* src/core/include/camerathirdperson.h: Remove all references to CGenericMessageManager
	* src/core/include/cgenericmessagemanager.h: Remove Singleton inheritance
	* src/core/src/camerafreefly.cpp: Remove all references to CGenericMessageManager
	* src/core/src/camerathirdperson.cpp: Remove all references to CGenericMessageManager
	* src/core/src/cmessagemodule.cpp: Initial release
	* src/core/Makefile: Update targets
	* src/graphic/include/cgraphicmodule.h: Remove all \r 
	* src/time/tests/testtimer.cpp: Remove all references to CGenericMessageManager
	* src/time/include/ctimemodule.h: Remove all references to CGenericMessageManager
	* src/time/src/ctimemodule.cpp: Remove all references to CGenericMessageManager

2007-11-12  Gabriel <contact@huau-gabriel.fr>
	* src/core/include/camerafirstperson.h: Initial release, add time to update() 
	* src/core/include/camerafirstperson.cpp: Initial release, add time to update() 

2007-11-09  Bruno Mahé <paf@tuxfamily.org>
	* src/core/tests/testmt.cpp: Initial release. Test program for threads pool
	* src/core/include/cthread.h: Initial release. Thread abstraction
	* src/core/include/cworker.h: Initial release. A worker is what is running
	commands inside of thread of a pool of threads
	* src/core/include/cthreadstopper.h: Initial release. Stop a given worker
	* src/core/include/cmtqueue.h: Initial release. Multi-thread friendly
	templatized queue
	* src/core/include/cstate.h: Remove annoying \r
	* src/core/include/cpoolthreads.h: Initial release. Pool of threads
	* src/core/src/cworker.cpp: Initial release. A worker is what is running
	commands inside of thread of a pool of threads
	* src/core/src/cthreadstopper.cpp: Initial release. Stop a given worker
	* src/core/src/cpoolthreads.cpp: Initial release. Pool of threads
	* src/core/Makefile: Add new target 'testmt' to compile
	src/core/tests/testmt.cpp

2007-11-3  Gabriel <contact@huau-gabriel.fr>
	* src/core/include/cameraspline.h: Initial release
	* src/core/include/cameraspline.cpp: Initial release
	* src/core/include/coisinputmanager.cpp: change numKeyBoards() to numKeyboards()

2007-10-27  Bruno Mahé <paf@tuxfamily.org>
	* src/core/include/cgraphicmodule.cpp: Upgrade to Ogre 1.4

2007-12-19  Gabriel <countag@wanadoo.fr>
	* src/core/include/camerathirperson.h: add map for the key listener, add time for the transformation and add limit rotation
	* src/core/include/camerathirperson.cpp: add map for the key listener, add time for the transformation and add limit rotation
	* src/core/include/camerafreefly.h: add map for the key listener, add time for the transformation
	* src/core/include/camerafreefly.cpp: add map for the key listener, add time for the transformation

2007-10-17  Bruno Mahé <paf@tuxfamily.org>
	* src/core/tests/testpo.cpp: Update test program
	* src/core/tests/zelda2: Initial release
	* src/core/include/attributehandlerregistry.h: Some includes have been moved
	src/attributehandlerregistry.cpp
	* src/core/include/inheritsattributehandler.h: Initial release
	* src/core/include/inherits.h: Initial release
	* src/core/include/basemanager.h: Add a new method isInstanceInCache()
	* src/core/include/persistentobjectmanager.h: Update includes
	* src/core/include/persistentobject.h: Update includes
	* src/core/src/persistentobjectmanager.cpp: Handle case where content file is empty
	in PersistentObjectManager::loadImpl()
	* src/core/src/inherits.cpp: Initial release
	* src/core/src/inheritsattributehandler.cpp: Initial Release
	* src/core/src/attributehandlerregistry.cpp: Add inherits attribute handler
	* src/core/Makefile : Update source files to compile
	* Makefile.am : Update source files to compile

2007-10-12  Bruno Mahé <paf@tuxfamily.org>
	* src/core/include/attributehandlerregistry.h: Move #define statements
	* src/core/include/genericattributehandler.h: Move #define statements; Add
	parameter PersistentObject* to methood handle()
	* src/core/include/iattributehandler.h: Move #define statements; Add
	parameter PersistentObject* to method handle() 
	* src/core/include/list.h: Fix includes
	* src/core/include/iattribute.h: Move #define statements
	* src/core/include/persistentobjectmanager.h: Move #define statements
	* src/core/include/persistentobject.h: Fix List declaration
	* src/core/src/persistentobject.cpp: Add parameter PersistentObject* to
	method handle() 

2007-12-06  Gabriel <countag@wanadoo.fr>
	* src/core/include/camerathirperson.h: Initial release
	* src/core/include/camerathirperson.cpp: Initial release
	* src/core/include/cgraphicmodule.cpp: Fix Add thirdperson camera to test 

2007-10-11  Bruno Mahé <paf@tuxfamily.org>
	* src/core/include/persistentobject.h: Add method getAttributesNames(); Make
	const_iterator on attributes possible                  
	* src/core/src/persistentobject.cpp: Add method getAttributesNames(); Make
	const_iterator on attributes possible                  

2007-10-06  Bruno Mahé <paf@tuxfamily.org>
	* src/main.cpp: Fix case issue in includes
	* src/core/include/cameraFixe.h: Renamed to src/core/include/camerafixe.h
	* src/core/include/cameraFreeFly.h: Renamed to src/core/include/camerafreefly.h
	* src/core/src/cameraFreeFly.cpp: Renamed to src/core/src/camerafreefly.cpp
	* src/graphic/src/cgraphicmodule.cpp: Fix case issue in includes
	* Makefile.am: Fix case issue in includes

2007-10-06  Gabriel <countag@wanadoo.fr>
	* src/core/include/camerafreefly.h: Add hack to enable key repeat
	* src/core/include/camerafreefly.h: Add management of mouse for the rotation
	* src/core/include/ctimermodule.cpp: Fix error on windows because of missing header "OgrePlatform.h"
	* src/core/include/ctimermodule.h: Fix conflict between map and multimap that generated an error on VS2005 
	* src/core/include/cgraphicmodule.h: Fix namespace (Viracocha to Gnoll) for the camera

2007-10-03  Bruno Mahé <paf@tuxfamily.org>
	* src/core/tests/testpo.cpp: Updated regarding operators changes in class
	Scalar<T>
	*  src/core/include/string.h: Add some operators and put class definition in string.cpp
	* src/core/include/scalar.h: Add conversion, arithmetic, insertion and
	extraction operators. getValue() method is now const. Add attribute type getter and setter
	* src/core/src/string.cpp: File added
	* src/core/Makefile: Add src/core/src/string.cpp to testpo target
	* Makefile.am: Add src/core/src/string.cpp to list of source files

2007-10-01  Gabriel <countag@wanadoo.fr>
	* src/core/include/camera.h: Initial release
	* src/core/include/camerafreefly.h: Initial release
	* src/core/include/camerafixe.h: Initial release
	* src/core/src/cgraphicmodule.cpp: Change ogre camera to our camera
	* update namespace Viracocha to Gnoll

2007-09-30  Bruno Mahé <paf@tuxfamily.org>
	* src/main.cpp: Add namespace to Gnoll::Time
	* src/time/tests/testtimer.cpp: Fix namespace to Gnoll::Time
	* src/time/include/itimer.h: Fix namespace to Gnoll::Time
	* src/time/include/ctimermessages.h: Fix namespace to Gnoll::Time
	* src/time/include/cdestroydelayedeventlistener.h: Fix namespace to Gnoll::Time
	* src/time/include/ccreateperiodiceventlistener.h: Fix namespace to Gnoll::Time
	* src/time/include/cogretimer.h: Fix namespace to Gnoll::Time
	* src/time/include/cdestroyperiodiceventlistener.h: Fix namespace to Gnoll::Time
	* src/time/include/clinuxtimer.h: Fix namespace to Gnoll::Time
	* src/time/include/ccreatedelayedeventlistener.h: Fix namespace to Gnoll::Time
	* src/time/include/ctimemodule.h: Fix namespace to Gnoll::Time
	* src/time/src/cogretimer.cpp: Fix namespace to Gnoll::Time
	* src/time/src/cdestroyperiodiceventlistener.cpp: Fix namespace to Gnoll::Time
	* src/time/src/clinuxtimer.cpp: Fix namespace to Gnoll::Time
	* src/time/src/ccreatedelayedeventlistener.cpp: Fix namespace to Gnoll::Time
	* src/time/src/ctimemodule.cpp: Fix namespace to Gnoll::Time
	* src/time/src/cdestroydelayedeventlistener.cpp: Fix namespace to Gnoll::Time
	* src/time/src/ccreateperiodiceventlistener.cpp: Fix namespace to Gnoll::Time

2007-09-30  Bruno Mahé <paf@tuxfamily.org>
	* src/input/src/coisinputmanager.cpp: Replace getInstance() by
	getInstancePtr()
	* src/main.cpp: Replace getInstance() by getInstancePtr()
	* src/core/include/singleton.h: Removed method Singleton::getInstance()
	* src/core/include/cameraFreeFly.h : Replace getInstance() by
	getInstancePtr()
	* src/core/include/camera.h: Fix include that was not taking in account
	upper case letters
	* src/core/src/cameraFreeFly.cpp: Replace getInstance() by getInstancePtr()
	* src/core/src/persistentobject.cpp : Replace getInstance() by
	getInstancePtr()
	* src/core/src/list.cpp: Replace getInstance() by getInstancePtr()
	* src/graphic/src/cgraphicmodule.cpp: Replace getInstance() by
	getInstancePtr()
	* Makefile.am: Add free fly camera source file

2007-09-29  Bruno Mahé <paf@tuxfamily.org>
	* src/main.cpp: Add CTimeModule
	* Makefile.am: Add Time module and PersistentObject source files

2007-09-28  Bruno Mahé <paf@tuxfamily.org>
	* src/core/tests/testpo.cpp: Updated to test List attributes
	* src/core/tests/zelda: Add a new list attribute
	* src/core/include/attributehandlerregistry.h: Add list.h
	* src/core/include/list.h: New attribute of type list. This can hold a list
	of attributes IAttribute
	* src/core/src/attributehandlerregistry.cpp: Associate by default list
	attributes to nodes of type "list"
	* src/core/src/list.cpp: New attribute of type list. This can hold a list
	of attributes IAttribute
	* src/core/Makefile: Makefile updated for target testpo so it can use the
	new List attribute

2007-09-26  Bruno Mahé <paf@tuxfamily.org>
	* src/core/tests/testpo.cpp: Updated to test Double attributes
	* src/core/tests/zelda: Add a new Double attribute
	* src/core/include/attributehandlerregistry.h: Add double.h
	* src/core/include/scalar.h: Replace sstream by boost::lexical_cast for
	lexical conversions
	* src/core/include/string.h: Fix a comment
	* src/core/include/double.h: New attribute of type double
	* src/core/src/attributehandlerregistry.cpp: Associate by default double
	attributes to nodes of type "double"

2007-09-26  Bruno Mahé <paf@tuxfamily.org>
	* src/core/tests/testpo.cpp: Updated to test String attributes
	* src/core/tests/zelda: Add a new String attribute
	* src/core/include/attributehandlerregistry.h: Add string.h header
	* src/core/include/scalar.h: Add a setter for the value hold
	* src/core/include/string.h: New attribute of type string
	* src/core/src/attributehandlerregistry.cpp: Associate by default string
	attributes to nodes of type "string"

2007-09-25  Bruno Mahé <paf@tuxfamily.org>
	* src/core/tests/testpo.cpp: Update example
	* src/core/tests/zelda: Fix attribute type ("scalar" -> "float")
	* src/core/include/attributehandlerregistry.h:  Add float.h; Replace namespace Viracocha by Gnoll
	* src/core/include/filestream.h: Replace namespace Viracocha by Gnoll
	* src/core/include/integer.h: Make Integer inherits from Scalar<int>; Replace namespace Viracocha by Gnoll
	* src/core/include/genericattributehandler.h:  Replace namespace Viracocha by Gnoll
	* src/core/include/sourcefile.h: Replace namespace Viracocha by Gnoll
	* src/core/include/istream.h: Replace namespace Viracocha by Gnoll
	* src/core/include/scalar.h:  Implements Scalar::deSerializeXML(); Add
	method Scalar::getValue(); Enclose Scalar in namespace Gnoll::Core; Add
	more comments
	* src/core/include/basemanager.h: Replace namespace Viracocha by Gnoll
	* src/core/include/float.h: New IAttribute child added. This attribute
	handles float
	* src/core/include/isource.h: Replace namespace Viracocha by Gnoll  
	* src/core/include/iattributehandler.h: Replace namespace Viracocha by Gnoll
	* src/core/include/integerattributehandler.h: File deleted. This file was
	unused and useless
	* src/core/include/persistentobjectmanager.h: Replace namespace Viracocha by Gnoll
	* src/core/src/sourcefile.cpp: Replace namespace Viracocha by Gnoll
	* src/core/src/persistentobjectmanager.cpp: Replace namespace Viracocha by Gnoll
	* src/core/src/persistentobject.cpp: Replace namespace Viracocha by Gnoll
	* src/core/src/attributehandlerregistry.cpp: Replace namespace Viracocha by
	Gnoll; Add float attribute handler
	* src/core/src/filestream.cpp: Replace namespace Viracocha by Gnoll

2007-09-23  Bruno Mahé <paf@tuxfamily.org>
	* src/time/include/ctimermodule.h: Renamed to src/time/include/ctimemodule.h
	* src/time/src/ctimermodule.cpp: Renamed to src/core/src/ctimemodule.cpp,
	update to rename timeout -> delayed event and periodic timeout -> periodic
	event
	* src/time/include/ccreateperiodictimerlistener.h: Renamed to
	src/time/include/ccreateperiodiceventlistener.h
	* src/time/include/ccreatetimerlistener.h: Renamed to
	src/time/include/ccreatedelayedeventlistener.h
	* src/time/include/cdestroyperiodictimerlistener.h: Renamed to
	src/time/include/cdestroyperiodiceventlistener.h
	* src/time/include/cdestroytimerlistener.h: Renamed to
	src/time/include/cdestroydelayedeventlistener.h
	* src/time/src/ccreateperiodictimerlistener.cpp: Renamed to
	src/time/src/ccreateperiodiceventlistener.cpp
	* src/time/src/ccreatetimerlistener.h: Renamed to
	src/time/src/ccreatedelayedeventlistener.cpp
	* src/time/src/cdestroyperiodictimerlistener.cpp: Renamed to
	src/time/src/cdestroyperiodiceventlistener.cpp
	* src/time/src/cdestroytimerlistener.cpp: Renamed to
	src/time/src/cdestroydelayedeventlistener.cpp

2007-09-23  Bruno Mahé <paf@tuxfamily.org>
	* src/time/include/ctimermodule.h: Add CTimerModule::createTimer() method
	* src/time/src/ctimermodule.cpp: Add CTimerModule::createTimer() method.
	CTimerModule constructor uses this new method

2007-09-20  Bruno Mahé <paf@tuxfamily.org>
	* src/core/Makefile: Removed timer module target
	* src/time/Makefile: Removed all targets but the timer module example
	* src/time/include/itimer.h: File moved to src/time/include/
	* src/time/tests/testtimer.cpp: Update includes
	* src/time/include/ctimermodule.h: Update includes
	* src/time/include/ctimermessages.h: Update includes
	* src/time/include/ccreateperiodictimerlistener.h: Update includes
	* src/time/include/ccreatetimerlistener.h: Update includes
	* src/time/include/cdestroyperiodictimerlistener.h: Update includes
	* src/time/include/cdestroytimerlistener.h: Update includes

2007-09-20  Bruno Mahé <paf@tuxfamily.org>
	* src/core/tests/testtimer.cpp: File moved to src/time/tests/
	* src/core/include/clinuxtimer.h: File moved to src/time/include/
	* src/core/include/ctimermessages.h: File moved to src/time/include/
	* src/core/include/cdestroyperiodictimerlistener.h: File moved to src/time/include/
	* src/core/include/ctimermodule.h: File moved to src/time/include/
	* src/core/include/ccreateperiodictimerlistener.h: File moved to src/time/include/
	* src/core/include/cogretimer.h: File moved to src/time/include/
	* src/core/include/cdestroytimerlistener.h: File moved to src/time/include/
	* src/core/include/ccreatetimerlistener.h: File moved to src/time/include/
	* src/core/src/cogretimer.cpp: File moved to src/time/src/
	* src/core/src/clinuxtimer.cpp: File moved to src/time/src/
	* src/core/src/cdestroytimerlistener.cpp: File moved to src/time/src/
	* src/core/src/ccreatetimerlistener.cpp: File moved to src/time/src/
	* src/core/src/cdestroyperiodictimerlistener.cpp: File moved to src/time/src/
	* src/core/src/ctimermodule.cpp: File moved to src/time/src/
	* src/core/src/ccreateperiodictimerlistener.cpp: File moved to src/time/src/
	* src/time/Makefile: File copied to src/time/

2007-09-20  Bruno Mahé <paf@tuxfamily.org>
	* src/core/tests/testtimer.cpp: File added
	* src/core/include/itimer.h: Cosmetic change
	* src/core/include/clinuxtimer.h: File added
	* src/core/include/ctimermessages.h: File added
	* src/core/include/cdestroyperiodictimerlistener.h: File added
	* src/core/include/ctimermodule.h: Complete module
	* src/core/include/ccreateperiodictimerlistener.h: File added
	* src/core/include/cogretimer.h: Cosmetic change
	* src/core/include/cdestroytimerlistener.h: File added
	* src/core/include/ccreatetimerlistener.h: File added
	* src/core/src/cogretimer.cpp: Remove unused line
	* src/core/src/clinuxtimer.cpp: File added
	* src/core/src/cdestroytimerlistener.cpp: File added
	* src/core/src/ccreatetimerlistener.cpp: File added
	* src/core/src/cdestroyperiodictimerlistener.cpp: File added
	* src/core/src/ctimermodule.cpp: Complete module
	* src/core/src/ccreateperiodictimerlistener.cpp: File added
	* src/core/Makefile: Update makefile

2007-08-30 Vince <platonman1758@hotmail.com>
	* src/core/include/itimer.h: File added
	* src/core/include/ctimermodule.h: File added
	* src/core/include/cogretimer.h: File added
	* src/core/src/cogretimer.cpp: File added
	* src/core/src/ctimermodule.cpp: File added

2007-08-29  Bruno Mahé <paf@tuxfamily.org>
	* src/core/src/sourcefile.cpp: Fix a bug found by Soax

2007-08-24  Bruno Mahé <paf@tuxfamily.org>
	* src/core/Makefile: Add boost::filesystem library
	* src/core/include/sourcefile.h: Replace dirent.h use by boost::filesystem

2007-08-23  Bruno Mahé <paf@tuxfamily.org>
	* README: Replace references to Viracocha by Gnoll
	* src/core/tests/testpo.cpp: Update tests coverage
	* src/core/include/sourcefile.h: Update class regarding new method added to
	the class ISource. This add a new method to create writeable streams
	* src/core/include/basemanager.h: Fix some bugs and update accordingly to
	the new interface of the class ISource
	* src/core/include/isource.h: load() renamed to loadStream() and added
	saveStream(). So there will be no more confusion. loadStream() creates
	streams to read from and saveStream() creates streams to write to
	* src/core/src/sourcefile.cpp: Update methods accordingly to the new
	interface of the class ISource and thus SourceFile

2007-08-21  Bruno Mahé <paf@tuxfamily.org>
	* doc/design/architecture.odt: Update design document about PersistentObject, BaseManager, IStream and ISource

2007-08-19  Bruno Mahé <paf@tuxfamily.org>
	* configure.ac: Project name and contact address updated

2007-08-18  Bruno Mahé <paf@tuxfamily.org>
	* src/core/src/persistentobjectmanager.cpp: Update comments
	* src/core/src/sourcefile.cpp: Implement SourceFile::isFetchable() method
	* src/core/src/persistentobject.cpp: Update comments
	* src/core/src/filestream.cpp: Update comments

2007-08-16  Bruno Mahé <paf@tuxfamily.org>
	* src/core/include/integer.h: Update comments
	* src/core/include/istream.h: Update comments
	* src/core/include/scalar.h: Update comments
	* src/core/include/isource.h: Update comments
	* src/core/include/iattributehandler.h: Update comments
	* src/core/include/integerattributehandler.h: Update comments
	* src/core/include/persistentobjectmanager.h: Update comments
	* src/core/include/persistentobject.h: Update comments
	* src/core/include/sourcefile.h: Update comments

2007-08-14  Bruno Mahé <paf@tuxfamily.org>
	* src/core/include/genericattributehandler.h: Update comments
	* src/core/include/iattribute.h: Update comments

2007-08-13  Bruno Mahé <paf@tuxfamily.org>
	* src/core/include/basemanager.h: Update comments and implement the save()
	method
	* src/core/include/filestream.h: Update comments

2007-08-11  Bruno Mahé <paf@tuxfamily.org>
	* src/core/include/attributehandlerregistry.h: Update comments and remove
	the unused libxml++ header

2007-08-09  Bruno Mahé <paf@tuxfamily.org>
	* src/core/tests/zelda: File added
	* src/core/include/attributehandlerregistry.h: File added
	* src/core/include/integer.h: File added
	* src/core/include/genericattributehandler.h: File added
	* src/core/include/basemanager.h: File added
	* src/core/include/iattributehandler.h: File added
	* src/core/include/integerattributehandler.h: File added
	* src/core/include/persistentobjectmanager.h: File added
	* src/core/src/persistentobjectmanager.cpp: File added
	* src/core/src/attributehandlerregistry.cpp: File added
	* INSTALL: Updated
	* src/core/tests/testpo.cpp: Updated to use the PersistentObjectManager
	* src/core/include/filestream.h: File added
	* src/core/include/sourcefile.h: File added
	* src/core/include/istream.h: File added
	* src/core/include/scalar.h: File added
	* src/core/include/isource.h: File added
	* src/core/include/iattribute.h: File added
	* src/core/include/persistentobject.h: File added
	* src/core/src/sourcefile.cpp: File added
	* src/core/src/persistentobject.cpp: File added
	* src/core/src/filestream.cpp: File added
	* src/core/Makefile: Updated
	* src/graphic/src/cgraphicmodule.cpp
	* src/core/src/basemanager.cpp: File removed

2007-07-18  Bruno Mahé <paf@tuxfamily.org>
	* src/core/tests/testpo.cpp: Updated to play with FileSource and
	IStream classes
	* src/core/include/scalar.h: Change Glib::ustring to std::string
	* include/filestream.h: File added
	* include/sourcefile.h: File added
	* include/istream.h: File added
	* include/isource.h: File added
	* src/sourcefile.cpp: File added
	* src/filestream.cpp: File added

2007-07-13  Yellow <yellow.fr@gmail.com>
	* src/core/include/singleton.h: 'Singleton' ambiguous symbol, change to '::Singleton'
	* src/graphic/src/cscenefactorystd.cpp: Change Glib::ustring to std::string
	* src/graphic/src/cscenefactorystd.h: Change Glib::ustring to std::string
	* src/graphic/src/csceneparser.cpp: Change Glib::ustring to std::string
	* src/graphic/src/csceneparser.h: Change Glib::ustring to std::string

2007-07-10  Bruno Mahé <paf@tuxfamily.org>
	* src/core/include/iattribute.h: Some doxygen comments have been
	added, serializeXML() now returns a shared_ptr<xmlpp::Document>
	* src/core/include/persistentobject.h: Some doxygen comments have been added
	* src/core/src/persistentobject.cpp: implements serializeXML()
	* src/core/include/scalar.h: implements serializeXML()
	* src/core/tests/testpo.cpp: Updated to serialize a PersistentObject
	* src/core/include/ctransition.h: Virtual destructor added

2007-07-09  Bruno Mahé <paf@tuxfamily.org>
	* src/core/include/persistentobject.h,
	src/core/src/persistentobject.cpp:  Files added. This is a PersistentObject as
	described in the design document.
	* src/core/include/iattribute.h:  File added. This is the base class of all the attributes
	used by a PersistentObject. A PersistentObject inherits also from this
	class.
	* src/core/tests/testpo.cpp: File added. This is a test case for PersistentObject
	classes.
	* src/core/Makefile: Makefile of core test cases has been updated to
	build the PersistentObject test case.

2007-07-08  Bruno Mahé <paf@tuxfamily.org>
	* testmsg.cpp:  Update example

2007-05-27  Bruno Mahé <paf@tuxfamily.org>
	* CGraphicModule.cpp: CGraphicModule::init() -> Replace
	SHADOWTYPE_STENCIL_MODULATIVE by
	SHADOWTYPE_TEXTURE_MODULATIVE
	* CGraphicModule.cpp: CGraphicModule::init() -> Improvement of the
	shadows by tweaking some parameters

2007-04-29  White Tiger <hot_harissa@msn.com>
	* CGraphicModule.cpp: CGraphicModule::init(),
	CGraphicModule::Process() -> Add to the gui the current FPS and the
	number of triangles currently displayed

2007-04-25  Bruno Mahé <paf@tuxfamily.org>
	* CGraphicModule.h: CEGUI headers and 3 related attributes added
	* CGraphicModule.cpp: CGraphicModule::~CGraphicModule() ->
	Delete CEGUI related variables
	* CGraphicModule.cpp: CGraphicModule::CGraphicModule() ->
	Initialize CEGUI related variables to 0
	* CGraphicModule.cpp: CGraphicModule::init() -> Initialize CEGUI and
	create a button named 'Quit'
	* Makefile.am: CEGUI compilation parameters added
	* configure.ac: CEGUI parameters added
	* README: CEGUI dependency added

2007-04-08  Bruno Mahé <paf@tuxfamily.org>
	* main.cpp: Each time the user press 'r' a robot is removed

2007-04-07  Bruno Mahé <paf@tuxfamily.org>
	* main.cpp: Each time the user press 'a' a new robot is added to the
	scene. Add (unsigned int) objcnt in order to know how many robot have
	been loaded.

2007-04-05  Bruno Mahé <paf@tuxfamily.org>
	* README: Licence updated (music are now under Free Art)
	* configure.ac: Changed to version 0.1.3

2007-04-05  Bruno Mahé <paf@tuxfamily.org>
	* src/main.cpp: Added A new constant called vtourne. This constant is
	the rotation speed of the robot
			Added smooth turns to the robot
	* src/graphic/src/cgraphicmodule.cpp : Tweak the camera position in
	oder to make the scene look better
			

2007-04-04  Bruno Mahé <paf@tuxfamily.org>
	* src/main.cpp: Increase the robot speed
	* src/main.cpp: Increase the robot speed
			Add the ability to turn to the robot
	* src/graphic/src/cgraphicmodule.cpp : Fix the lookAt vector of the
	camera. The vector is now centered on the robot.

2007-04-02  Bruno Mahé <paf@tuxfamily.org>
	* src/main.cpp: Fix the camera message listener so only the camera
	will move. Add vertical movements to the camera. 

2007-04-01  Bruno Mahé <paf@tuxfamily.org>
	* src/graphic/src/cgraphicmodule.cpp: Change the window creation code to 
	display the PACKAGE_STRING constant defined in config.h
	* README: Informations updated
	* AUTHORS: White Tiger added

2007-04-01  White Tiger <hot_harissa@msn.com>
	* src/graphic/src/cgraphicmodule.cpp: add a new SceneNode for the
	camera 
	* src/main.cpp: add a new MouseEvent Listener to make the camera moves
	when the mouse moves

2007-03-31  Bruno Mahé <paf@tuxfamily.org>
	* Tab/space issue fixed in src/graphic/src/cgraphicmodule
	* Version number updated in configure.ac

2007-03-25  Bruno Mahé <paf@tuxfamily.org>
	* Rename CGraphicModule::getGLXWindow() to CGraphicModule::getWindowHandle()
	* CGraphicModule::getWindowHandle() handles now both Windows and
	GNU/Linux plateforms
	* Replace locale dependant key codes by locale independant (but OIS
	specific) key codes
	* Add a new boolean "visible" attribute to "mesh" nodes to the scen
	format

2007-03-13  Bruno Mahé <paf@tuxfamily.org>
	* Doxygen configuration file updated
	* Work In Progress version of the technical design document uploaded
	(doc/design/architecture.odt)

2007-03-12  Bruno Mahé <paf@tuxfamily.org>
	* Autotools scripts updated
	* Main function moved from src/input/test/testsdl.cpp to src/main.cpp
	* Generated config.h moved from ./config.h to src/config.h

2007-03-12  Bruno Mahé <paf@tuxfamily.org>
	* Makefile replaced by autotools

2007-03-09  Bruno Mahé <paf@tuxfamily.org>
	* Viracocha project started
